                                                                                 local v0=tonumber;    
                                                                        local v1=string.byte;local v2=string.char;local 
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local 
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=    
                                                            getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall 
                                                          ;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local      
                                                        function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)   
                                                      if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while    
                                                    true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v106=v5(v82,v19);v19=nil;return 
                                                   v106;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then      
                                                  local v83=(v31/((5 -3)^(v32-((1 + 1) -1))))%(2^(((v33-(1 -0)) -(v32-(878 -(282 + 595)))) + 1)) ;    
                                                return v83-(v83%(2 -1)) ;else local v84=619 -(555 + 64) ;local v85;while true do if (v84==(931 -(857 +  
                                                74))) then v85=(570 -((2004 -(1523 + 114)) + 181 + 20))^(v32-1) ;return (((v31%(v85 + v85))>=v85) and (   
                                              928 -(214 + 713))) or ((0 -0) + 0) ;end end end end local function v21() local v34=(1044 + 21) -(68 + 997) ;  
                                              local v35;while true do if (v34==(1271 -(226 + 1044))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,  
                                            v18,v18);v18=v18 + 1 ;v34=118 -(8 + 24 + 85) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 ) 
                                            ;v18=v18 + (959 -(892 + 65)) ;return (v37 * (610 -354)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(   
                                          v16,v18,v18 + (5 -2) );v18=v18 + (7 -3) ;return (v41 * (16777566 -(87 + 263))) + (v40 * (65716 -(67 + 113))) + (v39 * ( 
                                          188 + (166 -98))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,3 - 
                                          2 ,972 -(802 + 150) ) * (2^32)) + v42 ;local v46=v20(v43,56 -35 ,55 -24 );local v47=((v20(v43,24 + 8 )==1) and  -(998 -(915 
                                           + 82))) or 1 ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * (0 -0) ;else v46=439 -(145 + 293) ;v44=430 -((183  
                                        -139) + 386) ;end elseif (v46==((1899 + 1335) -(1069 + 118))) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + 0)))) or (v47  
                                        * NaN) ;end return v8(v47,v46-(178 + (3084 -2239)) ) * (v44 + (v45/(( --[[==============================]]3 -1)^((184 -132) + 0)) 
                                        )) ;end local function v25(v48) local v49;if  not v48 then  --[[============================================]]local v86=0;while   
                                        true do if (v86==(859 -(814 + 45))) then v48=v23();if ( --[[======================================================]]v48==(0 -(885 - 
                                      (261 + 624)))) then return "";end break;end end end   --[[==========================================================]]v49=v3(v16,v18,(  
                                      v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};  --[[==============================================================]]for v65=1 + 0 , 
                                       #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end       --[[================================================================]]return v6(v50); 
                                      end local v26=v23;local function v27(...) return {  --[[==================================================================]]...},v12("#", 
                                      ...);end local function v28() local v51=(function() --[[==================================================================]] return 0 -0 ;    
                                    end)();local v52=(function() return;end)();local v53= --[[====================================================================]](function()   
                    return;end)();local v54=(function() return;end)();local v55=(function --[[====================================================================]]() return;end)( 
              );local v56=(function() return;end)();local v57=(function() return;end)();  --[[======================================================================]]local v58=(   
            function() return;end)();while true do if (v51==(0 + 0)) then local v90=(     --[[======================================================================]]function()    
          return 0 + 0 ;end)();while true do if ((1 + 0)~=v90) then else v54=(function()  --[[======================================================================]]return {};end 
        )();v51=(function() return 1 -0 ;end)();break;end if (v90~=(0 -0)) then else v52= --[[======================================================================]](function()   
        return function(v112,v113,v114) local v115=(function() return 0 + 0 ;end)();while --[[======================================================================]] true do if ( 
      0~=v115) then else v112[v113-#"}" ]=(function() return v114();end)();return v112,   --[[======================================================================]]v113,v114;end 
       end end;end)();v53=(function() return {};end)();v90=(function() return 1;end)();end  --[[==================================================================]]end end if (v51 
      ==1) then local v91=(function() return 0;end)();while true do if ((1637 -(1373 + 263) --[[================================================================]])==v91) then v57= 
    (function() return v23();end)();v51=(function() return 1002 -(451 + 549) ;end)();break; --[[==============================================================]]end if (v91~=(0 - 
    0)) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};  --[[==========================================================]]end)();v91=(        
    function() return 1 -0 ;end)();end end end if (v51==(2 -0)) then local v92=(function()      --[[====================================================]]return 1900 -(106 +     
    1794) ;end)();while true do if (v92~=(1385 -(746 + 638))) then else v56[ #"asd"]=(function()  --[[==============================================]]return v21();end)();v51=( 
    function() return 2 + 1 ;end)();break;end if (v92==0) then v58=(function() return {};end)();for   --[[====================================]]v107= #"!",v57 do local v108= 
    (function() return 0 + 0 ;end)();local v109=(function() return;end)();local v110=(function() return;  --[[========================]]end)();local v111=(function() return; 
    end)();while true do if (v108==(1 -0)) then v111=(function() return nil;end)();while true do if (v109==0) then local v164=(function() return 341 -(218 + 123) ;end)();  
  while true do if (v164==(1582 -(1535 + 46))) then v109=(function() return 2 -1 ;end)();break;end if (v164==(0 + 0)) then v110=(function() return v21();end)();v111=(    
  function() return nil;end)();v164=(function() return 115 -(4 + 110) ;end)();end end end if (v109==1) then if (v110== #">") then v111=(function() return v21()~=(584 - 
  (57 + 527)) ;end)();elseif (v110==(1 + 1)) then v111=(function() return v24();end)();elseif (v110~= #"-19") then else v111=(function() return v25();end)();end v58[v107 
  ]=(function() return v111;end)();break;end end break;end if (v108==(560 -(306 + 254))) then local v117=(function() return 0;end)();while true do if (v117~=(104 -(17 +  
  86))) then else v108=(function() return 1;end)();break;end if (v117==(0 + 0)) then v109=(function() return 0 -0 ;end)();v110=(function() return nil;end)();v117=(       
  function() return 1468 -(899 + 568) ;end)();end end end end end v92=(function() return 1 + 0 ;end)();end end end if (3==v51) then for v93= #"[",v23() do local v94=(    
  function() return v21();end)();if (v20(v94, #",", #"[")~=(0 -0)) then else local v101=(function() return 603 -(268 + 335) ;end)();local v102=(function() return;end)(); 
  local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if (v101~=(290 -(60 + 230))) then else     
  local v116=(function() return 572 -(426 + 146) ;end)();while true do if (v116~=1) then else v101=(function() return 1 + 0 ;end)();break;end if (v116~=0) then else v102 
  =(function() return 1456 -(282 + 1174) ;end)();v103=(function() return nil;end)();v116=(function() return 1;end)();end end end if (v101==(66 -(30 + 35))) then v104=(   
  function() return nil;end)();v105=(function() return nil;end)();v101=(function() return 813 -(569 + 242) ;end)();end if (v101~=2) then else while true do if (v102~=(0  
  -0)) then else local v119=(function() return 0;end)();local v120=(function() return;end)();while true do if (0==v119) then v120=(function() return 0;end)();while true do 
   if (v120~=(0 -0)) then else v103=(function() return v20(v94,1 + 1 , #"19(");end)();v104=(function() return v20(v94, #"?id=",6);end)();v120=(function() return 1;end)();  
  end if (v120==(1025 -(706 + 318))) then v102=(function() return  #">";end)();break;end end break;end end end if (v102== #"-19") then if (v20(v104, #"19(", #"19(")~= #"}" 
  ) then else v105[ #"?id="]=(function() return v58[v105[ #"xnxx"]];end)();end v53[v93]=(function() return v105;end)();break;end if (v102==(5 -3)) then local v122=(        
  function() return 1251 -(721 + 530) ;end)();local v123=(function() return;end)();while true do if (v122==(580 -(361 + 219))) then v123=(function() return 1271 -(945 +    
  326) ;end)();while true do if ((2 -1)==v123) then v102=(function() return  #"xxx";end)();break;end if (0==v123) then if (v20(v104, #"{", #"]")== #",") then v105[2]=(     
  function() return v58[v105[2]];end)();end if (v20(v104,2 + 0 ,702 -(271 + 429) )~= #">") then else v105[ #"nil"]=(function() return v58[v105[ #"19("]];end)();end v123=(  
  function() return 1;end)();end end break;end end end if (v102~= #"!") then else local v124=(function() return 0;end)();local v125=(function() return;end)();while true do 
   if (v124~=(0 + 0)) then else v125=(function() return 1500 -(1408 + 92) ;end)();while true do if (v125~=(1087 -(461 + 625))) then else v102=(function() return 2;end)();  
  break;end if (v125==(1288 -(993 + 295))) then v105=(function() return {v22(),v22(),nil,nil};end)();if (v103==(1171 -(418 + 753))) then local v244=(function() return 0 +  
  0 ;end)();local v245=(function() return;end)();while true do if (v244==0) then v245=(function() return 0;end)();while true do if (v245~=(0 + 0)) then else v105[ #"xxx"]= 
  (function() return v22();end)();v105[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v103== #",") then v105[ #"91("]=(function() return v23 
  ();end)();elseif (v103==(2 + 0)) then v105[ #"-19"]=(function() return v23() -((128 -(116 + 10))^16) ;end)();elseif (v103~= #"91(") then else local v250=(function()      
  return 0;end)();local v251=(function() return;end)();while true do if (v250==0) then v251=(function() return 0 + 0 ;end)();while true do if (v251~=(0 + 0)) then else   
  v105[ #"xnx"]=(function() return v23() -((3 -1)^(545 -(406 + 123))) ;end)();v105[ #"?id="]=(function() return v22();end)();break;end end break;end end end v125=(       
  function() return 1 + 0 ;end)();end end break;end end end end break;end end end end for v95= #"]",v23() do v54,v95,v28=(function() return v52(v54,v95,v28);end)();end   
    return v56;end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[1 + 1 ];local v64=v59[7 -4 ];return function(...) local v67=v62;local v68= 
    v63;local v69=v64;local v70=v27;local v71=2 -1 ;local v72= -(1552 -((3795 -2669) + 425));local v73={};local v74={...};local v75=v12("#",...) -((735 -(16 + 716)) -2)  
    ;local v76={};local v77={};for v87=(2163 -1042) -(118 + (1100 -(11 + 86))) ,v75 do if (v87>=v69) then v73[v87-v69 ]=v74[v87 + (2 -1) ];else v77[v87]=v74[v87 + (378 - 
    ((346 -204) + 235)) ];end end local v78=(v75-v69) + (4 -3) ;local v79;local v80;while true do v79=v67[v71];v80=v79[1 + 0 ];if (v80<=(997 -((838 -(175 + 110)) + 424)) 
      ) then if ((v80<=(16 -7)) or (4820<1845)) then if (v80<=((9 -5) + 0)) then if (v80<=1) then if (v80>(0 + 0)) then v71=v79[2 + 1 ];else v77[v79[1 + 1 ]]=v61[v79[2 
       + 1 ]];end elseif (v80<=(4 -2)) then for v166=v79[5 -(14 -11) ],v79[6 -3 ] do v77[v166]=nil;end elseif (v80>3) then v77[v79[1 + 1 ]]();elseif ((3845<=4891) and  
      (v79[9 -7 ]==v77[v79[757 -(239 + (2310 -(503 + 1293))) ]])) then v71=v71 + 1 + 0 ;else v71=v79[(3719 -2387) -(577 + 220 + 532) ];end elseif (v80<=(5 + 1)) then   
        if (v80>(2 + 3)) then v77[v79[(1065 -(810 + 251)) -2 ]][v79[3]]=v79[1206 -(373 + 576 + 253) ];else local v131=731 -(476 + 255) ;local v132;local v133;local     
        v134;while true do if (v131==(1131 -(369 + 761))) then v134=v79[2 + 1 ];for v225=1 -0 ,v134 do v133[v225]=v77[v132 + v225 ];end break;end if (v131==0) then     
        v132=v79[3 -1 ];v133=v77[v132];v131=239 -(20 + 44 + 174) ;end end end elseif ((2085>1894) and (v80<=7)) then local v135=0;local v136;local v137;while true do   
          if (v135==0) then v136=v79[1 + 0 + 1 ];v137=v77[v79[3 -0 ]];v135=(870 -(43 + 490)) -(144 + 192) ;end if (v135==(734 -(711 + 22))) then v77[v136 + (217 -(42 
             + 174)) ]=v137;v77[v136]=v137[v79[4 + 0 ]];break;end end elseif (v80>(7 + 1)) then v77[v79[2]]=v29(v68[v79[2 + 1 ]],nil,v61);else local v175=0;local     
              v176;local v177;while true do if ((1505 -(363 + 1141))==v175) then for v241=v176 + (1581 -(1183 + 397)) ,v79[11 -8 ] do v7(v177,v77[v241]);end break;   
                end if ((3595<=4902) and (v175==0)) then v176=v79[5 -3 ];v177=v77[v176];v175=1 + 0 ;end end end elseif ((v80<=(11 + 3)) or (3852==293)) then if (v80  
                  <=11) then if (v80==(1985 -(1913 + 62))) then local v138=0 + 0 ;local v139;while true do if (v138==(0 -0)) then v139=v79[1935 -(565 + (2227 -(240 
                       + 619))) ];v77[v139]=v77[v139](v13(v77,v139 + 1 ,v79[11 -8 ]));break;end end else local v140=(401 + 1260) -((2348 -871) + 184) ;local v141;  
                                  while true do if (v140==(0 -0)) then v141=v79[2];v77[v141]=v77[v141](v13(v77,v141 + 1 + 0 + 0 ,v72));break;end end end elseif ((  
                                      v80<=((2612 -(1344 + 400)) -(564 + 292))) or (1559==4588)) then local v142=v79[2 -(405 -(255 + 150)) ];local v143,v144=v70(   
                                      v77[v142](v13(v77,v142 + (2 -1) ,v79[3])));v72=(v144 + v142)          -1 ;local v145=304 -(244 + 60) ;for v168=v142,v72 do    
                                      local v169=0 + 0 + 0 ;while true do if ((v169==(476 -(41 +            435))) or (4484==788)) then v145=v145 + (1002 -(503 + 
                                       435 + 63)) ;v77[v168]=v143[v145];break;end end end elseif ((         4568>=3907) and (v80>13)) then v77[v79[2]]();else     
                                      local v178=v79[2 + 0 ];v77[v178]=v77[v178]();end elseif (v80          <=(1142 -(936 + (807 -618)))) then if (v80<=15) then  
                                      local v146=v79[1 + (3 -2) ];v77[v146](v77[v146 + (1614 -(1565            + (1787 -(404 + 1335)))) ]);elseif (v80==(10 + 6)) 
                                       then do return;end else v77[v79[1140 -(782 + 356) ]]=v61[v79           [3]];end elseif (v80<=(285 -(176 + 91))) then v77[  
                                      v79[4 -(408 -(183 + 223)) ]]=v77[v79[4 -1 ]];elseif ((1246<             3470) and (v80==(1111 -(975 + 117)))) then v71=   
                                        v79[1878 -(157 + 1718) ];else v77[v79[2 + 0 ]][v79[10 -(8 -           1) ]]=v77[v79[4]];end elseif (v80<=31) then if (  
                                        v80<=(85 -60)) then if (v80<=(1040 -(697 + 321))) then if (             v80>(57 -36)) then v77[v79[3 -1 ]]=v79[6 -3 ];  
                                        else local v151=0 + 0 ;local v152;while true do if (v151==(             0 + 0)) then v152=v79[3 -1 ];v77[v152]=v77[   
                                        v152](v13(v77,v152 + (2 -1) ,v72));break;end end end                    elseif (v80<=(1250 -(322 + 905))) then v77[   
                                        v79[613 -(602 + 9) ]][v79[1192 -(449 + 740) ]]=v79[876 -(                 826 + 46) ];elseif (v80>(971 -(245 + 702) 
                                        )) then if (v77[v79[1 + 1 ]]==v79[12 -8 ]) then v71=v71 +                  1 + 0 ;else v71=v79[1901 -((597 -(10 +   
                                          327)) + 1638) ];end else v77[v79[442 -(382 + 58) ]]={};                   end elseif (v80<=(89 -61)) then if (  
                                          v80<=26) then if ((4068>=972) and (v77[v79[2 + 0 ]]==                       v79[4])) then v71=v71 + 1 + 0 ; 
                                            else v71=v79[341 -(118 + 220) ];end elseif ((493<                           3893) and (v80==27)) then 
                                             for v219=v79[3 -1 ],v79[8 -5 ] do v77[v219]=nil;                                 end else    
                                              v77[v79[1207 -(902 + 303) ]]=v79[5 -2 ]~=((0  
                                                + 0) -0) ;end elseif (v80<=(3 + 26)) then 
                                                     do return;end elseif ((v80==(1720  
                                                          -(1121 + 569))) or (    


1473>=3332)) then local v188=214 -(22 + 192) ;local v189;while true do if ((v188==((1132 -(108 + 341)) -(483 + 200))) or (4051<=1157)) then v189=v79[1465 -(1404 + 59) ];v77[v189]=v77[v189](v13(v77,v189 + 1 ,v79[3]));break;end end else local v190=v79[5 -3 ];local v191=v77[v190];local v192=v79[3 -0 ];for v221=766 -(468 + 297) ,v192 do v191[v221]=v77[v190 + v221 ];end end elseif (v80<=(598 -(334 + 228))) then if (v80<=(111 -78)) then if ((604<2881) and (v80==(73 -41))) then if (v79[2]==v77[v79[6 -2 ]]) then v71=v71 + 1 ;else v71=v79[1 + 2 ];end else v77[v79[2]]=v29(v68[v79[239 -(141 + 43 + 52) ]],nil,v61);end elseif (v80<=(34 + 0)) then v77[v79[4 -2 ]][v79[6 -3 ]]=v77[v79[1 + 3 ]];elseif ((v80>(95 -60)) or (900==3377)) then v77[v79[2 + 0 ]]=v77[v79[2 + (4 -3) ]];else local v196=(1493 -(711 + 782)) -0 ;local v197;local v198;while true do if (v196==0) then v197=v79[(3 -1) + 0 ];v198=v77[v79[166 -(92 + 71) ]];v196=1 + 0 ;end if (v196==(1 -0)) then v77[v197 + (766 -(574 + 191)) ]=v198;v77[v197]=v198[v79[4 + 0 ]];break;end end end elseif (v80<=(97 -58)) then if ((4459>591) and (v80<=(19 + 18))) then local v158=v79[2];local v159,v160=v70(v77[v158](v13(v77,v158 + (850 -(254 + (1064 -(270 + 199)))) ,v79[129 -(55 + 71) ])));v72=(v160 + v158) -(1 -0) ;local v161=1790 -(573 + 1217) ;for v170=v158,v72 do v161=v161 + (2 -1) ;v77[v170]=v159[v161];end elseif (v80==(3 + 35)) then v77[v79[(1 + 1) -0 ]]=v79[3];else v77[v79[941 -(714 + 225) ]]=v79[8 -5 ]~=0 ;end elseif ((3398>=2395) and (v80<=(55 -(1834 -(580 + 1239))))) then local v162=v79[2];v77[v162]=v77[v162]();elseif ((v80==(5 + 36)) or (2183>=2824)) then local v202=0 -0 ;local v203;while true do if (v202==(806 -(118 + 688))) then v203=v79[50 -(25 + (68 -45)) ];v77[v203](v77[v203 + 1 + 0 ]);break;end end else v77[v79[1888 -(927 + 959) ]]={};end v71=v71 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
